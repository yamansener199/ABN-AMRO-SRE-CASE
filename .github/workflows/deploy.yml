name: Build images and deploy to ECR AWS
on:
    push:
      branches:
        - main
#Change master branch to the main (disabled it to prevent actions working for dev stage)
env:
    AWS_REGION: eu-west-2
    ECR_REPOSITORY_1: backend_api
    ECR_REPOSITORY_2: data_api
    ECR_REPOSITORY_HELM: helm-abn
permissions:
    contents: read

jobs:
  deploy:
    name: Build and Push Images
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}
    
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      id: build-image-1
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        IMAGE_TAG: ${{ github.sha }}
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY_1:$IMAGE_TAG ./backend_api
        docker push $ECR_REGISTRY/$ECR_REPOSITORY_1:$IMAGE_TAG
        sed -i 's/tagbackend:.*/tagbackend: $IMAGE_TAG/g' ./flask-apps/values.yml
        echo "image=$ECR_REGISTRY/$ECR_REPOSITORY_1:$IMAGE_TAG" >> $GITHUB_OUTPUT

    - name: Build, tag, and push image to Amazon ECR
      id: build-image-2
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        IMAGE_TAG: ${{ github.sha }}
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY_2:$IMAGE_TAG ./data_api
        docker push $ECR_REGISTRY/$ECR_REPOSITORY_2:$IMAGE_TAG
        sed -i 's/tagdata:.*/tagdata: $IMAGE_TAG/g' ./flask-apps/values.yml
        echo "image=$ECR_REGISTRY/$ECR_REPOSITORY_2:$IMAGE_TAG" >> $GITHUB_OUTPUT

    #- name: Package the Helm Chart and Push to Amazon ECR
      #env:
      #    ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
      #    ECR_REPOSITORY: ${{ env.ECR_REPOSITORY_HELM }}
      #run : |
      #  helm package \
      #  chart \
      #  --app-version ${{ inputs.tag-name }} \
      #  --version ${{ inputs.tag-name }}
      #  helm push "${{ env.ECR_REPOSITORY_HELM }}-${{ inputs.tag-name }}.tgz" oci://$ECR_REGISTRY
      #shell: bash